<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Core Developers" xml:space="preserve">
    <value>核心开发者</value>
  </data>
  <data name="Defined" xml:space="preserve">
    <value>定义</value>
  </data>
  <data name="Execution Philosophy" xml:space="preserve">
    <value>工作哲学</value>
  </data>
  <data name="History" xml:space="preserve">
    <value>历史沿革</value>
  </data>
  <data name="In 2017, Antshares was rebranded to Neo as it implemented Smart Contracts 2.0. It underwent aggressive global expansion as hundreds of new developers poured onto the blockchain. Neo leadership began distributing NEO token rewards to groups and individuals that contributed to the growth of the Neo platform. Some of the earliest groups to join Neo included COZ, NeoEconoLabs, and O3 Labs." xml:space="preserve">
    <value>2017 年伴随智能合约 2.0 整合，小蚁品牌重塑为 Neo。数以百计的新开发者涌入区块链行业，Neo 处在了全球扩张狂潮的浪尖。Neo 核心团队开始向平台成长的个人和团体贡献者分发 NEO 通证奖励。最早一批加入 Neo 生态的团队包括 CoZ, Neo EconoLabs 和 O3 Labs。</value>
  </data>
  <data name="In 2021, Neo is being upgraded to version 3.0, known as N3. As a project that began in June 2018, the N3 upgrade represents the biggest advancement in Neo’s history. It is aimed at bringing the first all-in-one blockchain development experience to the industry, packed with powerful native features such as distributed storage, oracles, and name services. Neo N3 also boasts a simpler and more modular architecture than its predecessors, along with an improved governance and economic model." xml:space="preserve">
    <value>2021 年，Neo 将升级到 3.0 版，即 N3。 作为一项始于 2018 年 6 月的项目，N3 升级代表了 Neo 至今迈出的最大一步。 它旨在将业界首个一站式的开发经验带入区块链行业，其中包含强大的原生功能，例如分布式存储，预言机和域名服务。Neo N3 还拥有比其前辈更简单，更模块化的架构，以及改进的治理和经济模型。</value>
  </data>
  <data name="In 2021, Neo will take its biggest step forward toward decentralization with the launch of Neo N3. NEO holders will have the opportunity to vote in a Neo Council responsible for governing the blockchain, running consensus nodes, and setting critical blockchain parameters such as transaction fees." xml:space="preserve">
    <value>Neo 将于 2021 年推出 Neo N3，朝着去中心化迈出最大的一步。 NEO 通证持有人将有机会在 Neo 委员会中投票，该委员会负责管理区块链，运行共识节点并设置关键的区块链参数，例如交易费用。</value>
  </data>
  <data name="In the eyes of the idealist, the overarching goal of Neo is to be a decentralized and open network for the Smart Economy. The pragmatist, however, knows that in order for this goal to be realised in a timely manner, some centralized coordination must occur." xml:space="preserve">
    <value>在理想主义者看来，Neo 的首要目标是成为服务智能经济的去中心化开放网络。 但是，实用主义者知道，为了及时实现这一目标，必须进行一些中心化的协调。</value>
  </data>
  <data name="Introduction" xml:space="preserve">
    <value>简介</value>
  </data>
  <data name="It is the most feature-complete blockchain platform for building decentralized applications. Neo enables developers to digitize and automate the management of assets through smart contracts. It also provides powerful native infrastructures such as decentralized storage, oracles, and domain name service, creating a solid foundation for the Next-Gen Internet." xml:space="preserve">
    <value>在开发去中心化应用领域，Neo 是功能最全面的区块链开发平台。通过智能合约，开发者可以数字化资产并将资产管理自动化。Neo 还提供了强大的原生基础设施，包括去中心化存储，预言机和域名服务，为下一代互联网奠定坚实基础。</value>
  </data>
  <data name="Mission:" xml:space="preserve">
    <value>使命：</value>
  </data>
  <data name="NEO" xml:space="preserve">
    <value>NEO</value>
  </data>
  <data name="Neo also knows that the blockchain industry cannot circumvent existing legal systems or create solutions that are wholly incompatible with existing business frameworks. Instead, we must all work together to build the Smart Economy of tomorrow." xml:space="preserve">
    <value>Neo 亦熟知，区块链行业无法规避现有法律体系或创建与现有业务框架完全不兼容的解决方案。 相反，我们都必须共同努力，营造智能经济的未来。</value>
  </data>
  <data name="Neo Defined" xml:space="preserve">
    <value>定义 Neo</value>
  </data>
  <data name="Neo Foundation" xml:space="preserve">
    <value>Neo 基金会</value>
  </data>
  <data name="Neo Global Development" xml:space="preserve">
    <value>Neo 全球发展部门（NGD）</value>
  </data>
  <data name="Neo has approached this issue by founding and joining several industry groups designed to establish standards, educate law-makers, and increase access to infrastructure." xml:space="preserve">
    <value>Neo 通过成立并加入多个行业组织，共同建立标准，教育立法者和增加基础设施访问权限来解决此问题。</value>
  </data>
  <data name="Neo is an open-source community driven blockchain platform." xml:space="preserve">
    <value>Neo 是一个开源社区驱动的区块链平台。</value>
  </data>
  <data name="Neo practices a philosophy of Pragmatic Idealism" xml:space="preserve">
    <value>Neo 践行务实理想主义哲学</value>
  </data>
  <data name="Neo was a pioneer in the early blockchain industry. Not only was it the first public smart contract platform to be founded in China, it was also the first chain to use a dual token model and the first to implement a BFT style consensus mechanism. Further, Neo is still the first and only token sale to return all the original raised funds to its participants once the project had generated enough money to be self-sustaining." xml:space="preserve">
    <value>Neo 是区块链行业的先行者。 它不仅是第一个在中国创建的开放智能合约平台，还是第一个使用双通证模型的项目，还第一条使用 BFT 类共识机制的区块链。</value>
  </data>
  <data name="Neo was founded 2014 and has grown into a first-class smart contract platform. It is backed by a global developer community who continue to drive the blockchain forward." xml:space="preserve">
    <value>创立于 2014 年，Neo 已经成长为一流的智能合约平台。背靠全球开发者社区，致力于推动区块链技术的整体进步。</value>
  </data>
  <data name="Neo was founded by Da Hongfei and Erik Zhang in 2014 under the name Antshares. The original source code was published to GitHub in July 2015 and the MainNet subsequently launched in October 2016." xml:space="preserve">
    <value>2014 年达鸿飞和张铮文共同创立了 Neo, 当时的名字是小蚁。2015 年 7 月源代码在 Github 上开源，主网随后在 2016 月 10 月上线。</value>
  </data>
  <data name="Over the years, Neo’s organizational structure matured as its Shanghai based operation grew from less than a dozen to over 50. The number of community groups dedicated to advancing Neo’s technology also increased. Today, Neo has developers all over the world contributing to core development, infrastructure, and tooling, including alumni from organizations such as Microsoft, Facebook, Amazon, Samsung, Dell, Seagate, and others." xml:space="preserve">
    <value>多年来，Neo 的组织结构日趋完善，其在上海的运营团队从不到十二人发展到五十多人。致力于发展 Neo 技术的社区团体也有所增加。 如今，Neo 的开发者已遍布全球，专注于协议层核心开发，基础设施和开发工具，其中不少曾供职于微软，脸书，亚马逊，三星，戴尔，希捷等。</value>
  </data>
  <data name="Sponsored Community Groups" xml:space="preserve">
    <value>收到资助的社区团体</value>
  </data>
  <data name="The main groups working on Neo can be broken down as follows:" xml:space="preserve">
    <value>Neo 主要的工作组可划分如下：</value>
  </data>
  <data name="To be an open network for the Smart Economy." xml:space="preserve">
    <value>为智能经济打造的开放网络。</value>
  </data>
  <data name="To make any asset, digital or physical, accessible by human beings and programs with minimized trust and permission." xml:space="preserve">
    <value>以最小信任和许可让人机触达任意实物和数字资产。</value>
  </data>
  <data name="To this end, the Neo Foundation was established as a strategic guide for the Neo platform. As an organisation, the Neo Foundation sets the overall goals for the project and provides funding to other self-governed groups to pursue these goals as they see fit." xml:space="preserve">
    <value>为此，Neo 基金会作为 Neo 平台的战略指挥部应运而生。 作为一个组织，Neo 基金会为项目设定了总体目标，并向其他自治团体提供资金，以实现他们认为合适的目标。</value>
  </data>
  <data name="Vision:" xml:space="preserve">
    <value>愿景：</value>
  </data>
</root>